{"version":3,"sources":["Components/Carousel/Carousel.js","Components/Home/Home.js","utils/utility.js","Components/UI/Input/Input.js","Components/Auth/Signup/Signup.js","utils/auth.js","Components/Auth/Login/Login.js","Components/Navbar/Navbar.js","Components/Footer/Footer.js","Components/UI/Checkbox/Checkbox.js","Components/UI/Dropdown/Dropdown.js","Components/UI/SearchField/SearchField.js","Components/Filters/Filters.js","Components/UI/Spinner/Spinner.js","Components/Users/UsersList/UsersList.js","Components/Users/EditUser/EditUser.js","Components/Users/UserDetails/UserDetails.js","Components/Users/AddUser/AddUser.js","Components/Pets/AddPet/AddPet.js","Components/Pets/PetsList/PetsList.js","Components/Pets/EditPet/EditPet.js","Components/Pets/PetDetails/PetDetails.js","App.js","reportWebVitals.js","index.js","Components/Users/EditUser/EditUser.module.css","Components/Pets/EditPet/EditPet.module.css","Components/UI/Input/Input.module.css","Components/Users/UsersList/UserList.module.css","Components/Users/UserDetails/UserDetails.module.css","Components/Pets/PetsList/PetsList.module.css","Components/Pets/PetDetails/PetDetails.module.css","Components/Auth/Signup/Signup.module.css","Components/Navbar/Navbar.module.css","Components/Auth/Login/Login.module.css","Components/Users/AddUser/AddUser.module.css","Components/Pets/AddPet/AddPet.module.css","Components/Carousel/Carousel.module.css","Components/Footer/Footer.module.css","Components/Filters/Filters.module.css","Components/UI/Spinner/Spinner.module.css"],"names":["Carousel","className","style","data-interval","Item","src","alt","Home","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","console","log","input","props","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","validationError","elementConfig","placeholder","toLowerCase","elementType","join","onChange","changed","options","map","option","displayValue","Input","Signup","useState","message","setMessage","name","type","validation","valid","lastName","email","unique","password","confirm","street","zipCode","city","state","phoneNumber","form","setForm","formIsValid","setFormIsValid","formElementsArray","formElement","id","config","displayedForm","event","e","inputId","updatedFormElement","target","updatedForm","validForm","handleChange","Form","onSubmit","userCredentials","preventDefault","axios","post","then","response","data","catch","err","user","formControl","setUser","history","Button","color","padding","to","Login","minLenght","key","FormControl","marginRight","controlName","inline","display","InputGroup","maxHeight","fontSize","Navbar","isEmployee","_id","onClick","delete","Footer","Checkbox","alignItems","marginLeft","checked","htmlFor","label","Dropdown","width","margin","userRoleOptions","SearchField","Filters","flexDirection","justifyContent","marginBottom","Container","isDog","isCat","isBird","isRodent","isReptile","isOther","spinner","classes","Loader","UsersList","usersList","setUsersList","searchField","setSearchField","selectedRole","setSelectedRole","setIsDog","setIsCat","setIsBird","setIsReptile","setIsOther","useEffect","get","users","displayUsers","filter","element","includes","role","resultCard","pets","pet","Spinner","editUser","handleSubmit","selectedUserForm","address","buttons","toggleEditForm","UserDetails","setError","editForm","setEditForm","setSelectedUserForm","fetchData","a","match","params","status","error","deleteUser","EditUser","put","goBack","Card","Infos","position","createdAt","specie","breed","AddUser","fontWeight","AddPet","age","diagnosis","treatment","owner","url","location","pathname","split","toString","inputs","PetsList","petsList","setPetsList","setIsRodent","editPet","selectedPet","PetDetails","setSelectedPet","deletePet","EditPet","height","App","render","exact","path","component","selectedUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2c15e9e5.chunk.js","sourcesContent":["import React from 'react';\nimport style from './Carousel.module.css';\nimport { Carousel as CarouselBootstrap } from 'react-bootstrap';\nconst Carousel = () => {\n    return (\n        <CarouselBootstrap className={style.Carousel} data-interval=\"10000\">\n            <CarouselBootstrap.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"./images/pets.png\"\n                    alt=\"Pets\"\n                />\n                {/* <CarouselBootstrap.Caption></CarouselBootstrap.Caption> */}\n            </CarouselBootstrap.Item>\n            <CarouselBootstrap.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"./images/clinic-front.png\"\n                    alt=\"Clinic front\"\n                />\n\n                {/* <CarouselBootstrap.Caption></CarouselBootstrap.Caption> */}\n            </CarouselBootstrap.Item>\n            <CarouselBootstrap.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"./images/op-room.png\"\n                    alt=\"op-room\"\n                />\n\n                {/* <CarouselBootstrap.Caption></CarouselBootstrap.Caption> */}\n            </CarouselBootstrap.Item>\n        </CarouselBootstrap>\n    );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport Carousel from '../Carousel/Carousel';\n\nconst Home = () => {\n    return (\n        <div>\n            <Carousel />\n        </div>\n    );\n};\n\nexport default Home;\n","import { useState, useEffect } from 'react';\nexport const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties,\n    };\n};\n\nexport const useLocalStorage = (key, defaultValue = '') => {\n    const [state, setState] = useState(\n        () => window.localStorage.getItem(key) || defaultValue\n    );\n    useEffect(() => {\n        window.localStorage.setItem(key, state);\n    }, [key, state]);\n    return [state, setState];\n};\n\nexport const checkValidity = (value, rules) => {\n    // I add isValid var to be able to check more rules at the same time\n    // otherwise the last rule's value would set the whole validation\n    let isValid = true;\n\n    if (!rules) {\n        return true;\n    }\n\n    if (rules.required === 'true') {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid;\n    }\n    console.log('isValid', isValid);\n    return isValid;\n};\n","import React from 'react';\n\nimport style from './Input.module.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [style.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(style.Invalid);\n    }\n\n    let validationError = null;\n    if (props.invalid && props.touched) {\n        validationError = (\n            <p>\n                Please enter a valid{' '}\n                {props.elementConfig.placeholder.toLowerCase()}\n            </p>\n        );\n    }\n\n    switch (props.elementType) {\n        case 'input':\n            inputElement = (\n                <input\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed}\n                />\n            );\n            break;\n        case 'textarea':\n            inputElement = (\n                <textarea\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed}\n                />\n            );\n            break;\n        case 'select':\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}\n                >\n                    <option value=\"\">--Choose one--</option>\n\n                    {props.elementConfig.options.map((option) => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = (\n                <input\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed}\n                />\n            );\n    }\n\n    return (\n        <div className={style.Input}>\n            {/* <label className={style.Label}>{props.label}</label> */}\n            {inputElement}\n            {validationError}\n        </div>\n    );\n};\n\nexport default input;\n","import React, { useState } from 'react';\nimport style from './Signup.module.css';\nimport { signup } from '../../../utils/auth';\nimport { Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { updateObject, checkValidity } from '../../../utils/utility';\nimport Input from '../../../Components/UI/Input/Input';\n\nconst Signup = (props) => {\n    const [message, setMessage] = useState('');\n    const [form, setForm] = useState({\n        name: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'First name',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 2,\n            },\n            valid: false,\n            touched: false,\n        },\n        lastName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Last name',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 2,\n            },\n            valid: false,\n            touched: false,\n        },\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: 'Email',\n            },\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true,\n                unique: true, /// you still have to write the code for this validation\n            },\n            valid: false,\n            touched: false,\n        },\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Password',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 3,\n            },\n            valid: false,\n            touched: false,\n        },\n        confirm: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Confirm password',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 3,\n            },\n            valid: false,\n            touched: false,\n        },\n        street: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Street',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n        zipCode: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'ZIP Code',\n            },\n            value: '',\n            validation: {\n                // required: true,\n                minLength: 5,\n                maxLength: 5,\n            },\n            valid: false,\n            touched: false,\n        },\n        city: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'City',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n        state: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'State',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n        phoneNumber: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Phone Num.',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n    });\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const handleChange = (e, inputId) => {\n        console.log('inputId', inputId);\n\n        const updatedFormElement = updateObject(form[inputId], {\n            value: e.target.value,\n            valid: checkValidity(e.target.value, form[inputId].validation),\n            touched: true, // input in the form has changed\n        });\n        const updatedForm = updateObject(form, {\n            [inputId]: updatedFormElement,\n        });\n\n        let validForm = true;\n        for (let inputId in updatedForm) {\n            validForm = updatedForm[inputId].valid && formIsValid;\n        }\n        setForm(updatedForm);\n        setFormIsValid(validForm);\n    };\n    console.log('formUpdated', form);\n    console.log('formIsValid', formIsValid);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        signup({\n            name: form.name.value,\n            lastName: form.lastName.value,\n            email: form.email.value,\n            password: form.password.value,\n            confirm: form.confirm.value,\n            street: form.street.value,\n            zipCode: form.zipCode.value,\n            city: form.city.value,\n            state: form.state.value,\n            phoneNumber: form.phoneNumber.value,\n        }).then((user) => {\n            if (user.message) {\n                setMessage(user.message);\n\n                // Reset input values\n                for (let formControl in form) {\n                    setForm({\n                        ...form,\n                        formControl: { ...formControl, value: '' },\n                    });\n                }\n            } else {\n                // signup was successful\n                props.setUser(user);\n                props.history.push('/');\n            }\n        });\n    };\n\n    // Make dynamic input tags for the form\n    const formElementsArray = [];\n    for (let formElement in form) {\n        formElementsArray.push({\n            id: formElement,\n            config: form[formElement],\n        });\n    }\n    let displayedForm = formElementsArray.map((formElement) => {\n        return (\n            <div className=\"form-group\" key={formElement.id}>\n                <Input\n                    className=\"form-control\"\n                    elementType={formElement.config.elementType}\n                    elementConfig={formElement.config.elementConfig}\n                    value={formElement.config.value}\n                    invalid={!formElement.config.valid}\n                    shouldValidate={formElement.config.validation} // validation is required\n                    touched={formElement.config.touched} // input has changed from initial status\n                    changed={(event) => handleChange(event, formElement.id)}\n                />\n            </div>\n        );\n    });\n\n    return (\n        <Form className={style.Form} onSubmit={handleSubmit}>\n            {displayedForm}\n            <button\n                className={style.Button}\n                type=\"submit\"\n                // disabled={!formIsValid}\n            >\n                Sign up\n            </button>\n            {message && <p style={{ color: 'red', padding: '0' }}>{message}</p>}\n\n            {/* <p>\n                Do you already have an account? <Link to=\"/\">Login</Link>\n            </p> */}\n            <Link to=\"/\">Back</Link>\n        </Form>\n    );\n};\n\nexport default Signup;\n","import axios from 'axios';\n\nconst signup = (userCredentials) => {\n    return axios\n        .post('/api/auth/signup', userCredentials)\n        .then((response) => {\n            return response.data;\n        })\n        .catch((err) => {\n            return err.response.data;\n        });\n};\n\nconst login = (userCredentials) => {\n    return axios\n        .post('/api/auth/login', userCredentials)\n        .then((response) => {\n            return response.data;\n        })\n        .catch((err) => {\n            return err.response.data;\n        });\n};\n\nconst logout = () => {\n    return axios\n        .delete('/api/auth/logout')\n        .then((response) => {\n            return response.data;\n        })\n        .catch((err) => {\n            return err.response.data;\n        });\n};\n\nexport { signup, login, logout };\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './Login.module.css';\nimport { Form, InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { login } from '../../../utils/auth';\nimport { updateObject, checkValidity } from '../../../utils/utility';\n\nconst Login = (props) => {\n    const [message, setMessage] = useState('');\n    const [form, setForm] = useState({\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: 'Email',\n            },\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true,\n            },\n            touched: false,\n        },\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Password',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLenght: 3,\n            },\n            touched: false,\n        },\n    });\n\n    const handleChange = (event, controlName) => {\n        const updatedForm = updateObject(form, {\n            [controlName]: updateObject(form[controlName], {\n                value: event.target.value,\n                valid: checkValidity(\n                    event.target.value,\n                    form[controlName].validation\n                ),\n                touched: true,\n            }),\n        });\n\n        setForm(updatedForm);\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        login({\n            email: form.email.value,\n            password: form.password.value,\n        }).then((user) => {\n            if (user.message) {\n                setMessage(user.message);\n\n                //Reset input values\n                // for (let key in form) {\n                //     setForm({ ...form, key: { ...key, value: '' } });\n                // }\n                console.log('form', form);\n            } else {\n                //  put the user object in the state of App.js\n                console.log(user);\n                props.setUser(user);\n                props.history.push('/');\n            }\n        });\n    };\n\n    const formElementsArray = [];\n    for (let key in form) {\n        formElementsArray.push({\n            id: key,\n            config: form[key],\n        });\n    }\n\n    let displayedForm = formElementsArray.map((formElement) => (\n        <FormControl\n            key={formElement.id}\n            placeholder={formElement.config.elementConfig.placeholder}\n            type={formElement.config.elementConfig.type}\n            // aria-label=\"email\"s\n            // aria-describedby=\"basic-addon1\"\n            style={{ marginRight: '2%' }}\n            value={formElement.config.value}\n            onChange={(event) => handleChange(event, formElement.id)}\n        />\n    ));\n\n    return (\n        <Form inline className={style.Form} onSubmit={handleSubmit}>\n            <div style={{ display: 'flex' }}>\n                <InputGroup>{displayedForm}</InputGroup>\n                <Button\n                    style={{ maxHeight: '3rem', fontSize: '0.9rem' }}\n                    type=\"submit\"\n                >\n                    Log in\n                </Button>\n            </div>\n            <div>\n                {message ? (\n                    <p style={{ color: 'red' }}>{message}</p>\n                ) : (\n                    <div>\n                        <p>\n                            Haven't you registered yet?\n                            <Link to={'/signup'} className={style.Button}>\n                                Sign up\n                            </Link>\n                            here\n                        </p>\n                    </div>\n                )}\n            </div>\n        </Form>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport style from './Navbar.module.css';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../../utils/auth';\nimport Login from '../Auth/Login/Login';\nimport { Navbar as Nav } from 'react-bootstrap';\n\nconst Navbar = (props) => {\n    console.log('isEmployee', props.isEmployee);\n\n    const handleLogout = () =>\n        logout()\n            .then(() => {\n                props.setUser(() => '');\n                props.history.push('/');\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n    return (\n        <Nav className={style.Navbar}>\n            {!props.user ? (\n                <Login setUser={props.setUser} history={props.history} />\n            ) : (\n                <ul>\n                    <li>\n                        <Link to={`/users/${props.user._id}`}>Profile</Link>\n                    </li>\n                    <li>\n                        <button className={style.Button} onClick={handleLogout}>\n                            Logout\n                        </button>\n                    </li>\n                </ul>\n            )}\n            {props.isEmployee ? (\n                <ul>\n                    <li>\n                        <Link to=\"/users\">Users</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/pets\">Patients</Link>\n                    </li>\n                </ul>\n            ) : (\n                <ul>\n                    <li>\n                        <Link to=\"#emergencyForm\">Book an appointment</Link>\n                    </li>\n                </ul>\n            )}\n        </Nav>\n    );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport style from './Footer.module.css';\nimport { Link } from 'react-router-dom';\n\nconst Footer = () => {\n    return (\n        <div className={style.Footer}>\n            <h5> Follow Us </h5>\n            <ul>\n                <li>\n                    <Link to=\"#\"> Twitter </Link>\n                </li>\n                <li>\n                    <Link to=\"#\"> Facebook </Link>\n                </li>\n                <li>\n                    <Link to=\"#\"> Instagram </Link>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst Checkbox = (props) => {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                alignItems: 'flex-start',\n                marginLeft: '10%',\n            }}\n        >\n            <input\n                type=\"checkbox\"\n                name={props.name}\n                checked={props.checked}\n                onChange={props.handleChange}\n            />\n            <label style={{ marginLeft: '15%' }} htmlFor={props.name}>\n                {props.label}\n            </label>\n        </div>\n    );\n};\n\nexport default Checkbox;\n","import React from 'react';\n\nconst Dropdown = (props) => {\n    return (\n        <div style={{ width: '50%' }}>\n            <label htmlFor=\"role\">Role: </label>\n            <select\n                name=\"role\"\n                id=\"role\"\n                style={{ width: ' 7rem', margin: '5% 0 0 5%' }}\n                onChange={props.handleChange}\n            >\n                <option value=\"\">All</option>\n                {props.userRoleOptions}\n            </select>\n        </div>\n    );\n};\n\nexport default Dropdown;\n","import React from 'react';\n\nconst SearchField = (props) => {\n    return (\n        <div\n            style={{\n                margin: '5% 0 3% 0',\n            }}\n        >\n            <input\n                type=\"text\"\n                name=\"search\"\n                id=\"search\"\n                placeholder=\"Search...\"\n                onChange={props.handleChange}\n                style={{ width: '20rem' }}\n            />\n        </div>\n    );\n};\n\nexport default SearchField;\n","import React from 'react';\nimport style from './Filters.module.css';\nimport Checkbox from '../UI/Checkbox/Checkbox';\nimport Dropdown from '../UI/Dropdown/Dropdown';\nimport SearchField from '../UI/SearchField/SearchField';\n\nconst Filters = (props) => {\n    return (\n        <form\n            style={{\n                width: '80vw',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-around',\n                alignItems: 'flex-start',\n            }}\n        >\n            <SearchField handleChange={props.handleChange} />\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'flex-start',\n                    width: '30rem',\n                    marginBottom: '10%',\n                }}\n            >\n                {props.userRoleOptions ? (\n                    <Dropdown\n                        userRoleOptions={props.userRoleOptions}\n                        handleChange={props.handleChange}\n                    />\n                ) : (\n                    <div className={style.Container}>\n                        <Checkbox\n                            name=\"dog\"\n                            label=\"Dog\"\n                            checked={props.isDog}\n                            handleChange={props.handleChange}\n                        />\n                        <Checkbox\n                            name=\"cat\"\n                            label=\"Cat\"\n                            checked={props.isCat}\n                            handleChange={props.handleChange}\n                        />\n                        <Checkbox\n                            name=\"bird\"\n                            label=\"Bird\"\n                            checked={props.isBird}\n                            handleChange={props.handleChange}\n                        />\n                        <Checkbox\n                            name=\"rodent\"\n                            label=\"Rodent\"\n                            checked={props.isRodent}\n                            handleChange={props.handleChange}\n                        />\n                        <Checkbox\n                            name=\"reptile\"\n                            label=\"Reptile\"\n                            checked={props.isReptile}\n                            handleChange={props.handleChange}\n                        />\n                        <Checkbox\n                            name=\"other\"\n                            label=\"Other\"\n                            checked={props.isOther}\n                            handleChange={props.handleChange}\n                        />\n                    </div>\n                )}\n            </div>\n        </form>\n    );\n};\n\nexport default Filters;\n","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nconst spinner = () => {\n    return <div className={classes.Loader}>Loading...</div>;\n};\n\nexport default spinner;\n","import React, { useState, useEffect } from 'react';\nimport style from './UserList.module.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Filters from '../../Filters/Filters';\nimport Spinner from '../../UI/Spinner/Spinner';\n\nconst UsersList = (props) => {\n    const [usersList, setUsersList] = useState([]);\n    const [searchField, setSearchField] = useState('');\n    const [selectedRole, setSelectedRole] = useState('');\n    const [isDog, setIsDog] = useState(true);\n    const [isCat, setIsCat] = useState(true);\n    const [isBird, setIsBird] = useState(true);\n    const [isReptile, setIsReptile] = useState(true);\n    const [isOther, setIsOther] = useState(true);\n\n    const fetchData = () => {\n        axios\n            .get('/api/users')\n            .then((users) => {\n                console.log('users', users.data);\n                setUsersList(users.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    console.log('usersList', usersList);\n\n    const handleChange = (event) => {\n        if (event.target.type === 'select-one') {\n            setSelectedRole(event.target.value);\n        } else if (event.target.type === 'checkbox') {\n            if (event.target.name === 'dog') {\n                setIsDog(() => !isDog);\n            } else if (event.target.name === 'cat') {\n                setIsCat(() => !isCat);\n            } else if (event.target.name === 'bird') {\n                setIsBird(() => !isBird);\n            } else if (event.target.name === 'reptile') {\n                setIsReptile(() => !isReptile);\n            } else {\n                setIsOther(() => !isOther);\n            }\n        } else {\n            setSearchField(event.target.value);\n        }\n    };\n\n    const filteredSearch = usersList.filter((element) => {\n        return (\n            (`${element.name}`\n                .toLowerCase()\n                .includes(`${searchField.toLowerCase()}`) ||\n                `${element.lastName}`\n                    .toLowerCase()\n                    .includes(`${searchField.toLowerCase()}`)) &&\n            (element.role === selectedRole || !selectedRole)\n        );\n        // );\n    });\n\n    const displayUsers = filteredSearch.map((user) => {\n        return (\n            <tr key={user._id} className={style.resultCard}>\n                <td style={{ width: '30%' }}>\n                    <Link to={`/users/${user._id}`}>\n                        {user.lastName}, {user.name}\n                    </Link>\n                </td>\n                <td>{user.role}</td>\n\n                <td style={{ display: 'flex' }}>\n                    {user.pets.map((pet) => {\n                        <span>⭑</span>;\n                        console.log(pet);\n                        {\n                            /* switch (pet.specie) {\n                            case 'dog':\n                                return (\n                                    <Link to={`/pets/${pet._id}`}>\n                                        <img\n                                            src=\"../../../../images/dog-logo.png\"\n                                            alt=\"dog-logo\"\n                                            style={{ width: '1rem' }}\n                                        />\n                                    </Link>\n                                );\n                            case 'cat':\n                                return (\n                                    <Link to={`/pets/${pet._id}`}>\n                                        <img\n                                            src=\"../../../../images/cat-logo.png\"\n                                            alt=\"cat-logo\"\n                                            style={{ width: '1rem' }}\n                                        />\n                                    </Link>\n                                );\n                            case 'rodent':\n                                return (\n                                    <Link to={`/pets/${pet._id}`}>\n                                        <img\n                                            src=\"../../../../images/rodent-logo.png\"\n                                            alt=\"rodent-logo\"\n                                            style={{ width: '1rem' }}\n                                        />\n                                    </Link>\n                                );\n                            case 'bird':\n                                return (\n                                    <Link to={`/pets/${pet._id}`}>\n                                        <img\n                                            src=\"../../../../images/bird-logo.png\"\n                                            alt=\"bird-logo\"\n                                            style={{ width: '1rem' }}\n                                        />\n                                    </Link>\n                                );\n                            case 'reptile':\n                                return (\n                                    <Link to={`/pets/${pet._id}`}>\n                                        <img\n                                            src=\"../../../../images/reptile-logo.png\"\n                                            alt=\"reptile-logo\"\n                                            style={{ width: '1rem' }}\n                                        />\n                                    </Link>\n                                );\n                            case 'other':\n                                return (\n                                    <Link to={`/pets/${pet._id}`}>\n                                        <img\n                                            src=\"../../../../images/other-logo.png\"\n                                            alt=\"other-logo\"\n                                            style={{ width: '1rem' }}\n                                        />\n                                    </Link>\n                                );\n                        } */\n                        }\n                    })}\n                </td>\n            </tr>\n        );\n    });\n    // const userRoles = [...new Set(usersList.map((user) => user.role)]\n    //  const userRoleOptions = userRoles.map((role) => {\n    //      return (\n    //          <option value={role} key={role}>\n    //              {role}\n    //          </option>\n    //      );\n    //  });\n    const userRoleOptions = (\n        <>\n            <option value=\"employee\">employee</option>\n            <option value=\"client\">client</option>\n        </>\n    );\n\n    if (!usersList) return <Spinner />;\n    return (\n        <div className={style.Container}>\n            <Filters\n                handleChange={handleChange}\n                userRoleOptions={userRoleOptions}\n            />\n            <button className={style.Button}>\n                <Link to={'/users/add'}>\n                    <span>+</span>\n                </Link>\n            </button>\n            <table style={{ margin: '0 0 10% 5%' }}>\n                <tbody>{displayUsers}</tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport style from './EditUser.module.css';\n\nconst editUser = (props) => {\n    return (\n        <div>\n            <form className={style.Form} onSubmit={props.handleSubmit}>\n                <h2>Edit </h2>\n                <div className={style.Input}>\n                    <label htmlFor=\"name\">Name: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        value={props.selectedUserForm.name}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"name\">Last name: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        value={props.selectedUserForm.lastName}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                {/* <div className={style.Input}>\n                    <label htmlFor=\"name\">E-mail: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"email\"\n                        name=\"email\"\n                        value={props.selectedUserForm.email}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"password\">Password: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"password\"\n                        name=\"password\"\n                        value=\"\"\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"confirm\"> Confirm Password: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"confirm\"\n                        name=\"confirm\"\n                        value=\"\"\n                        onChange={props.handleChange}\n                    />\n                </div> */}\n                <div className={style.Input}>\n                    <label htmlFor=\"street\">Street: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"street\"\n                        name=\"street\"\n                        value={props.selectedUserForm.address.street}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"zipCode\">ZIP Code: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"zipCode\"\n                        name=\"zipCode\"\n                        value={props.selectedUserForm.address.zipCode}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"city\">City: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"city\"\n                        name=\"city\"\n                        value={props.selectedUserForm.address.city}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"state\">State: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"state\"\n                        name=\"state\"\n                        value={props.selectedUserForm.address.state}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"phoneNum\">Phone Num: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"phoneNumber\"\n                        name=\"phoneNumber\"\n                        value={props.selectedUserForm.phoneNumber}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.buttons}>\n                    <button type=\"submit\">Update</button>\n                    <button onClick={props.toggleEditForm}>Back</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default editUser;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './UserDetails.module.css';\nimport axios from 'axios';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport { updateObject, checkValidity } from '../../../utils/utility';\nimport EditUser from '../EditUser/EditUser';\n\nconst UserDetails = (props) => {\n    console.log('UserDetails props', props);\n    const [error, setError] = useState(null);\n    const [editForm, setEditForm] = useState(false);\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const [selectedUserForm, setSelectedUserForm] = useState(\n        // {\n        //     name: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'First name',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             required: true,\n        //             minLength: 2,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     lastName: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'Last name',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             required: true,\n        //             minLength: 2,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     email: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'email',\n        //             placeholder: 'Email',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             required: true,\n        //             isEmail: true,\n        //             unique: true, /// you still have to write the code for this validation\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     street: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'Street',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             // required: true,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     zipCode: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'ZIP Code',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             // required: true,\n        //             minLength: 5,\n        //             maxLength: 5,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     city: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'City',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             // required: true,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     state: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'State',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             // required: true,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     phoneNumber: {\n        //         elementType: 'input',\n        //         elementConfig: {\n        //             type: 'text',\n        //             placeholder: 'Phone Num.',\n        //         },\n        //         value: '',\n        //         validation: {\n        //             // required: true,\n        //         },\n        //         valid: false,\n        //         touched: false,\n        //     },\n        //     role: {\n        //         elementType: 'select',\n        //         elementConfig: {\n        //             options: [\n        //                 { value: 'employee', displayValue: 'employee' },\n        //                 { value: 'client', displayValue: 'client' },\n        //             ],\n        //         },\n        //         value: '',\n        //         validation: {},\n        //         valid: true,\n        //     },\n        // } || ''\n\n        ''\n    );\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        await axios\n            .get(`/api/users/${props.match.params.id}`)\n            .then((response) => {\n                console.log('response from DB', response.data);\n\n                setSelectedUserForm(\n                    updateObject(response.data.user, {\n                        pets: response.data.pets,\n                    })\n                );\n\n                // setSelectedUserForm({\n                //     ...selectedUserForm,\n                //     owner: {\n                //         ...form.owner,\n                //         elementConfig: {\n                //             ...form.elementConfig,\n                //             options: users.data,\n                //         },\n                //     },\n                // });\n                // for (let formControl in selectedUserForm) {\n                //     setSelectedUserForm(\n                //         updateObject({\n                //             ...selectedUserForm,\n                //             formControl: {\n                //                 ...formControl,\n                //                 value: response.data[formControl],\n                //             },\n                //         })\n                //     );\n                // }\n            })\n\n            .catch((err) => {\n                console.log(err.response);\n                if (err.response.status === 404) {\n                    setError({\n                        error: 'User not found',\n                    });\n                }\n            });\n    };\n    console.log('selectedUserForm', selectedUserForm);\n\n    const handleChange = (event) => {\n        // console.log('inputId', inputId);\n        const { name, value } = event.target;\n        console.log('name, value', name, value);\n\n        setSelectedUserForm({\n            ...selectedUserForm,\n            [name]: value,\n            address: {\n                ...selectedUserForm.address,\n                [name]: value,\n            },\n        });\n        // const updatedFormElement = updateObject(selectedUserForm[inputId], {\n        //     value: event.target.value,\n        //     valid: checkValidity(\n        //         event.target.value,\n        //         selectedUserForm[inputId].validation\n        //     ),\n        //     touched: true, // input in the form has changed\n        // });\n        // const updatedForm = updateObject(selectedUserForm, {\n        //     [inputId]: updatedFormElement,\n        // });\n\n        // let validForm = true;\n        // for (let inputId in updatedForm) {\n        //     validForm = updatedForm[inputId].valid && validForm;\n        // }\n        // setSelectedUserForm(updatedForm);\n        // setFormIsValid(validForm);\n    };\n\n    console.log('selectedUserForm', selectedUserForm);\n\n    const toggleEditForm = () => {\n        setEditForm(() => !editForm);\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log('update');\n        axios\n            .put(`/api/users/${selectedUserForm._id}`, {\n                name: selectedUserForm.name,\n                lastName: selectedUserForm.lastName,\n                email: selectedUserForm.email,\n                street: selectedUserForm.address.street,\n                zipCode: selectedUserForm.address.zipCode,\n                city: selectedUserForm.address.city,\n                state: selectedUserForm.address.state,\n                phoneNumber: selectedUserForm.phoneNumber,\n            })\n            .then((response) => {\n                props.history.goBack();\n\n                // fetchData();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const deleteUser = async () => {\n        await axios\n            .delete(`/api/users/${selectedUserForm._id}`)\n            .then(() => {\n                console.log(\n                    `${selectedUserForm.name} ${selectedUserForm.lastName} was successfully removed`\n                );\n                props.history.push('/');\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    if (!selectedUserForm) return <Spinner />;\n    return (\n        <>\n            {editForm ? (\n                <EditUser\n                    toggleEditForm={toggleEditForm}\n                    handleChange={handleChange}\n                    handleSubmit={handleSubmit}\n                    selectedUserForm={selectedUserForm}\n                />\n            ) : (\n                // <>\n                <div className={style.Card}>\n                    <h3>\n                        {selectedUserForm.name} {selectedUserForm.lastName}\n                    </h3>\n                    <div>\n                        {!props.isEmployee ? (\n                            <Link to=\"/pets/add\">\n                                <span style={{ fontSize: 'bold' }}>+</span>\n                                <span>pet</span>\n                            </Link>\n                        ) : (\n                            <Link to={`/users/${selectedUserForm._id}/pet`}>\n                                <span style={{ fontSize: 'bold' }}>+</span>\n                                <span>pet</span>\n                            </Link>\n                        )}\n                    </div>\n                    <div className={style.Infos}>\n                        <div style={{ width: '100%' }}>\n                            <p>Address: </p>\n                            <p>\n                                &nbsp; Street: {selectedUserForm.address.street}\n                            </p>\n                            <p>\n                                &nbsp; ZIP Code:{' '}\n                                {selectedUserForm.address.zipCode}\n                            </p>\n                            <p>&nbsp; City: {selectedUserForm.address.city}</p>\n                            <p>\n                                &nbsp; State: {selectedUserForm.address.state}\n                            </p>\n                            <hr />\n                            <p>E-mail: {selectedUserForm.email}</p>\n                            <p>Phone num.: {selectedUserForm.phoneNumber}</p>\n                            <hr />\n                            {selectedUserForm.position && (\n                                <p>Position: {selectedUserForm.position}</p>\n                            )}\n                            <p>\n                                {selectedUserForm.role} since: <br />\n                                {selectedUserForm.createdAt}\n                            </p>\n                        </div>\n                        <div style={{ width: '100%' }}>\n                            <p>Pets: </p>\n                            <ul>\n                                {selectedUserForm.pets.map((pet) => {\n                                    return (\n                                        <Link to={`/pets/${pet._id}`}>\n                                            <li>\n                                                {pet.name}\n                                                <br />\n                                                {pet.specie}\n                                                <br />\n                                                {pet.breed}\n                                                <br />\n                                            </li>\n                                        </Link>\n                                    );\n                                })}\n                            </ul>\n                        </div>\n                    </div>\n                    <div className={style.buttons}>\n                        {/* <div>\n                            {!props.isEmployee ? (\n                                <Link to=\"/pets/add\">\n                                    <span style={{ fontSize: 'bold' }}>+</span>\n                                    <span>pet</span>\n                                </Link>\n                            ) : (\n                                <Link to={`/users/${selectedUserForm._id}/pet`}>\n                                    <span style={{ fontSize: 'bold' }}>+</span>\n                                    <span>pet</span>\n                                </Link>\n                            )}\n                        </div> */}\n                        <div>\n                            <button onClick={() => props.history.goBack()}>\n                                Back\n                            </button>\n                        </div>\n                        <div style={{ display: 'flex', marginRight: '5%' }}>\n                            <button onClick={toggleEditForm}>Edit</button>\n                            {/* <Link to={`/users/${selectedUserForm._id}/edit`}>Edit</Link> */}\n                            <button onClick={deleteUser}>Delete</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default UserDetails;\n","import React, { useState } from 'react';\nimport style from './AddUser.module.css';\nimport { updateObject, checkValidity } from '../../../utils/utility';\nimport Input from '../../../Components/UI/Input/Input';\nimport { Form } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst AddUser = (props) => {\n    const [message, setMessage] = useState('');\n    const [form, setForm] = useState({\n        name: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'First name',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 2,\n            },\n            valid: false,\n            touched: false,\n        },\n        lastName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Last name',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 2,\n            },\n            valid: false,\n            touched: false,\n        },\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: 'Email',\n            },\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true,\n                unique: true, /// you still have to write the code for this validation\n            },\n            valid: false,\n            touched: false,\n        },\n        street: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Street',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n        zipCode: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'ZIP Code',\n            },\n            value: '',\n            validation: {\n                // required: true,\n                minLength: 5,\n                maxLength: 5,\n            },\n            valid: false,\n            touched: false,\n        },\n        city: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'City',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n        state: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'State',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n\n        phoneNumber: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Phone Num.',\n            },\n            value: '',\n            validation: {\n                // required: true,\n            },\n            valid: false,\n            touched: false,\n        },\n        role: {\n            elementType: 'select',\n            elementConfig: {\n                options: [\n                    { value: 'employee', displayValue: 'employee' },\n                    { value: 'client', displayValue: 'client' },\n                ],\n            },\n            value: 'client',\n            validation: {},\n            valid: true,\n        },\n    });\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const handleChange = (e, inputId) => {\n        console.log('inputId', inputId);\n        console.log('required?', checkValidity(form[inputId].validation));\n\n        const updatedFormElement = updateObject(form[inputId], {\n            value: e.target.value,\n            valid: checkValidity(e.target.value, form[inputId].validation),\n            touched: true, // input in the form has changed\n        });\n        const updatedForm = updateObject(form, {\n            [inputId]: updatedFormElement,\n        });\n\n        let validForm = true;\n        for (let inputId in updatedForm) {\n            validForm = updatedForm[inputId].valid && validForm;\n        }\n        setForm(updatedForm);\n        setFormIsValid(validForm);\n    };\n    console.log('formUpdated', form);\n    console.log('formIsValid', formIsValid);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        axios\n            .post('/api/users/add', {\n                name: form.name.value,\n                lastName: form.lastName.value,\n                email: form.email.value,\n                street: form.street.value,\n                zipCode: form.zipCode.value,\n                city: form.city.value,\n                state: form.state.value,\n                role: form.role.value,\n                phoneNumber: form.phoneNumber.value,\n            })\n            .then((user) => {\n                if (user.message) {\n                    setMessage(user.message);\n\n                    // Reset input values\n                    for (let key in form) {\n                        setForm({\n                            ...form,\n                            key: { ...key, value: '' },\n                        });\n                    }\n                } else {\n                    console.log('user added', user);\n                    props.history.goBack();\n                }\n                // update the list of users\n                // props.fetchData();\n            });\n    };\n    // Make dynamic input tags for the form\n    const formElementsArray = [];\n    for (let formElement in form) {\n        formElementsArray.push({\n            id: formElement,\n            config: form[formElement],\n        });\n    }\n    let displayedForm = formElementsArray.map((formElement) => {\n        return (\n            <div className=\"form-group\" key={formElement.id}>\n                <Input\n                    className=\"form-control\"\n                    elementType={formElement.config.elementType}\n                    elementConfig={formElement.config.elementConfig}\n                    value={formElement.config.value}\n                    invalid={!formElement.config.valid}\n                    shouldValidate={formElement.config.validation} // validation is required\n                    touched={formElement.config.touched} // input has changed from initial status\n                    changed={(event) => handleChange(event, formElement.id)}\n                />\n            </div>\n        );\n    });\n\n    return (\n        <div>\n            <Form className={style.Form} onSubmit={handleSubmit}>\n                {displayedForm}\n                <button className={style.Button} type=\"submit\">\n                    <h1 style={{ fontWeight: 'bold' }}>+</h1>\n                </button>\n\n                {message && <p style={{ color: 'red' }}>{message}</p>}\n            </Form>\n        </div>\n    );\n};\n\nexport default AddUser;\n","import React, { useState, useEffect } from 'react';\nimport style from './AddPet.module.css';\nimport { updateObject, checkValidity } from '../../../utils/utility';\nimport Input from '../../../Components/UI/Input/Input';\nimport { Form } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst AddPet = (props) => {\n    const [message, setMessage] = useState('');\n\n    const [form, setForm] = useState({\n        specie: {\n            elementType: 'select',\n            elementConfig: {\n                options: [\n                    { value: 'dog', displayValue: 'dog' },\n                    { value: 'cat', displayValue: 'cat' },\n                    { value: 'rodent', displayValue: 'rodent' },\n                    { value: 'bird', displayValue: 'bird' },\n                    { value: 'reptile', displayValue: 'reptile' },\n                    { value: 'other', displayValue: 'other' },\n                ],\n            },\n            validation: {},\n            valid: true,\n        },\n\n        name: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Name',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 2,\n            },\n            valid: false,\n            touched: false,\n        },\n\n        breed: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Breed',\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 3,\n            },\n            valid: false,\n            touched: false,\n        },\n        age: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Age',\n            },\n            value: '',\n            validation: {\n                minLength: 1,\n            },\n            valid: false,\n            touched: false,\n        },\n        diagnosis: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Diagnosis',\n            },\n            value: '',\n            validation: {\n                minLength: 3,\n            },\n            valid: false,\n            touched: false,\n        },\n        treatment: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Treatment',\n            },\n            value: '',\n            validation: {\n                minLength: 3,\n            },\n            valid: false,\n            touched: false,\n        },\n\n        owner: {\n            elementType: 'select',\n            elementConfig: {\n                options: [],\n            },\n            validation: {},\n            valid: true,\n        },\n    });\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = () => {\n        axios\n            .get('/api/users/owners')\n            .then((users) => {\n                // console.log('options from DB', users.data);\n                setForm({\n                    ...form,\n                    owner: {\n                        ...form.owner,\n                        elementConfig: {\n                            ...form.elementConfig,\n                            options: users.data,\n                        },\n                    },\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const handleChange = (e, inputId) => {\n        const updatedFormElement = updateObject(form[inputId], {\n            value: e.target.value,\n            valid: checkValidity(e.target.value, form[inputId].validation),\n            touched: true, // input in the form has changed\n        });\n        const updatedForm = updateObject(form, {\n            [inputId]: updatedFormElement,\n        });\n\n        let validForm = true;\n        for (let inputId in updatedForm) {\n            validForm = updatedForm[inputId].valid && validForm;\n        }\n        setForm(updatedForm);\n        setFormIsValid(validForm);\n    };\n    console.log('formUpdated', form);\n    console.log('formIsValid', formIsValid);\n\n    //Set dinamically url according to role and history url\n    let url;\n    let owner;\n\n    {\n        props.location.pathname !== '/pets/add'\n            ? (url = `/api/users/${props.location.pathname\n                  .split('/')[2]\n                  .toString()}/pet`) &&\n              (owner = props.location.pathname.split('/')[2].toString())\n            : (url = '/api/pets/add') && (owner = form.owner.value);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        axios\n            .post(url, {\n                name: form.name.value,\n                specie: form.specie.value,\n                breed: form.breed.value,\n                age: form.age.value,\n                diagnosis: form.diagnosis.value,\n                treatment: form.treatment.value,\n                owner: owner,\n            })\n            .then((pet) => {\n                if (pet.message) {\n                    setMessage(pet.message);\n\n                    // Reset input values\n                    // for (let key in form) {\n                    //     setForm({\n                    //         ...form,\n                    //         key: { ...key, value: '' },\n                    //     });\n                    // }\n                } else {\n                    console.log('pet added', pet);\n                    props.history.goBack();\n                }\n            });\n    };\n    // Make dynamic input tags for the form\n    const formElementsArray = [];\n    for (let formElement in form) {\n        formElementsArray.push({\n            id: formElement,\n            config: form[formElement],\n        });\n    }\n    let displayedForm = formElementsArray.map((formElement) => {\n        let inputs = '';\n\n        {\n            props.isEmployee &&\n                (inputs = (\n                    <div className=\"form-group\" key={formElement.id}>\n                        <Input\n                            className=\"form-control\"\n                            elementType={formElement.config.elementType}\n                            elementConfig={formElement.config.elementConfig}\n                            value={formElement.config.value}\n                            invalid={!formElement.config.valid}\n                            shouldValidate={formElement.config.validation} // validation is required\n                            touched={formElement.config.touched} // input has changed from initial status\n                            changed={(event) =>\n                                handleChange(event, formElement.id)\n                            }\n                        />\n                    </div>\n                ));\n        }\n\n        {\n            formElement.id !== 'owner' &&\n                (inputs = (\n                    <div className=\"form-group\" key={formElement.id}>\n                        <Input\n                            className=\"form-control\"\n                            elementType={formElement.config.elementType}\n                            elementConfig={formElement.config.elementConfig}\n                            value={formElement.config.value}\n                            invalid={!formElement.config.valid}\n                            shouldValidate={formElement.config.validation} // validation is required\n                            touched={formElement.config.touched} // input has changed from initial status\n                            changed={(event) =>\n                                handleChange(event, formElement.id)\n                            }\n                        />\n                    </div>\n                ));\n            // setForm({\n            //     ...form,\n            //     owner: {\n            //         ...form.owner,\n            //         elementConfig: {\n            //             ...form.elementConfig,\n            //             options: {\n            //                 value: props.user._id,\n            //                 displayValue: `${props.user.lastName}, ${props.user.lastName}`,\n            //             },\n            //         },\n            //     },\n            // });\n        }\n\n        return inputs;\n    });\n\n    return (\n        <div>\n            <Form className={style.Form} onSubmit={handleSubmit}>\n                <h3>Add pet</h3>\n                {displayedForm}\n                <button className={style.Button} type=\"submit\">\n                    <span>+</span>\n                </button>\n                <button onClick={() => props.history.goBack()}>Back</button>\n\n                {message && <p style={{ color: 'red' }}>{message}</p>}\n            </Form>\n        </div>\n    );\n};\n\nexport default AddPet;\n","import React, { useState, useEffect } from 'react';\nimport style from './PetsList.module.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Filters from '../../Filters/Filters';\nimport Spinner from '../../UI/Spinner/Spinner';\n\nconst PetsList = (props) => {\n    const [petsList, setPetsList] = useState([]);\n    const [searchField, setSearchField] = useState('');\n    const [isDog, setIsDog] = useState(true);\n    const [isCat, setIsCat] = useState(true);\n    const [isRodent, setIsRodent] = useState(true);\n    const [isBird, setIsBird] = useState(true);\n    const [isReptile, setIsReptile] = useState(true);\n    const [isOther, setIsOther] = useState(true);\n\n    const fetchData = () => {\n        axios\n            .get('/api/pets')\n            .then((pets) => {\n                setPetsList(pets.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    console.log('petsList', petsList);\n\n    const handleChange = (event) => {\n        if (event.target.type === 'checkbox') {\n            if (event.target.name === 'dog') {\n                setIsDog(() => !isDog);\n            } else if (event.target.name === 'cat') {\n                setIsCat(() => !isCat);\n            } else if (event.target.name === 'bird') {\n                setIsBird(() => !isBird);\n            } else if (event.target.name === 'rodent') {\n                setIsRodent(() => !isRodent);\n            } else if (event.target.name === 'reptile') {\n                setIsReptile(() => !isReptile);\n            } else {\n                setIsOther(() => !isOther);\n            }\n        } else {\n            setSearchField(event.target.value);\n        }\n    };\n\n    const filteredSearch = petsList.filter((element) => {\n        return (\n            ((isDog && element.specie === 'dog') ||\n                (isCat && element.specie === 'cat') ||\n                (isBird && element.specie === 'bird') ||\n                (isRodent && element.specie === 'rodent') ||\n                (isReptile && element.specie === 'reptile') ||\n                (isOther && element.specie === 'other')) &&\n            (`${element.name}`\n                .toLowerCase()\n                .includes(`${searchField.toLowerCase()}`) ||\n                `${element.lastName}`\n                    .toLowerCase()\n                    .includes(`${searchField.toLowerCase()}`))\n        );\n    });\n\n    const displayUsers = filteredSearch.map((pet) => {\n        return (\n            <tr key={pet._id} className={style.resultCard}>\n                <td style={{ width: '30%' }}>\n                    <Link to={`/pets/${pet._id}`}>{pet.name}</Link>\n                </td>\n                <td>{pet.specie}</td>\n\n                <td>{pet.owner}</td>\n            </tr>\n        );\n    });\n\n    if (!petsList) return <Spinner />;\n    return (\n        <div className={style.Container}>\n            <Filters\n                handleChange={handleChange}\n                isDog={isDog}\n                isCat={isCat}\n                isBird={isBird}\n                isRodent={isRodent}\n                isReptile={isReptile}\n                isOther={isOther}\n            />\n            <button className={style.Button}>\n                <Link to={'/pets/add'}>\n                    <span>+</span>\n                </Link>\n            </button>\n            <table style={{ margin: '0 0 10% 5%' }}>\n                <tbody>{displayUsers}</tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default PetsList;\n","import React from 'react';\nimport style from './EditPet.module.css';\n\nconst editPet = (props) => {\n    // console.log('props editPet', props);\n\n    return (\n        <div>\n            <form className={style.Form} onSubmit={props.handleSubmit}>\n                <h2>Edit </h2>\n                <div className={style.Input}>\n                    <label htmlFor=\"name\">Name: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        value={props.selectedPet.name}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"specie\">Specie: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"specie\"\n                        name=\"specie\"\n                        value={props.selectedPet.specie}\n                        onChange={props.handleChange}\n                    />\n                </div>\n\n                <div className={style.Input}>\n                    <label htmlFor=\"breed\">Breed: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"breed\"\n                        name=\"breed\"\n                        value={props.selectedPet.breed}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"age\">Age: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"age\"\n                        name=\"age\"\n                        value={props.selectedPet.age}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"diagnosis\">Diagnosis: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"diagnosis\"\n                        name=\"diagnosis\"\n                        value={props.selectedPet.diagnosis}\n                        onChange={props.handleChange}\n                    />\n                </div>\n                <div className={style.Input}>\n                    <label htmlFor=\"treatment\">Treatment: &nbsp;</label>\n                    <input\n                        type=\"text\"\n                        id=\"treatment\"\n                        name=\"treatment\"\n                        value={props.selectedPet.treatment}\n                        onChange={props.handleChange}\n                    />\n                </div>\n\n                <div className={style.buttons}>\n                    <button type=\"submit\">Update</button>\n                    <button onClick={props.toggleEditForm}>Back</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default editPet;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './PetDetails.module.css';\nimport axios from 'axios';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport { updateObject, checkValidity } from '../../../utils/utility';\nimport EditPet from '../EditPet/EditPet';\n\nconst PetDetails = (props) => {\n    const [error, setError] = useState(null);\n    const [editForm, setEditForm] = useState(false);\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const [selectedPet, setSelectedPet] = useState('');\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        await axios\n            .get(`/api/pets/${props.match.params.id}`)\n            .then((response) => {\n                console.log('response from DB', response.data);\n\n                setSelectedPet(\n                    updateObject({\n                        _id: response.data.pet._id,\n                        name: response.data.pet.name,\n                        specie: response.data.pet.specie,\n                        breed: response.data.pet.breed,\n                        age: response.data.pet.age,\n                        diagnosis: response.data.pet.diagnosis,\n                        treatment: response.data.pet.treatment,\n                        owner: {\n                            name: response.data.owner.name,\n                            lastName: response.data.owner.lastName,\n                            email: response.data.owner.email,\n                            address: response.data.owner.address,\n                            phoneNumber: response.data.owner.phoneNumber,\n                        },\n                    })\n                );\n\n                // setSelectedPet(updateObject((selectedPet[index], {value: response.data[index]}))\n\n                // for (let formControl in selectedPet) {\n                //     setSelectedPet({\n                //         ...selectedPet,\n                //         formControl: {\n                //             ...formControl,\n                //             value: response.data[formControl],\n                //         },\n                //     });\n                // }\n            })\n\n            .catch((err) => {\n                console.log(err.response);\n                if (err.response.status === 404) {\n                    setError({\n                        error: 'Pet not found',\n                    });\n                }\n            });\n    };\n    console.log('selectedPet', selectedPet);\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        console.log('name, value', name, value);\n\n        setSelectedPet({\n            ...selectedPet,\n            [name]: value,\n            address: {\n                [name]: value,\n            },\n        });\n\n        // const updatedFormElement = updateObject(selectedPet[inputId], {\n        //     value: event.target.value,\n        //     valid: checkValidity(\n        //         event.target.value,\n        //         selectedPet[inputId].validation\n        //     ),\n        //     touched: true, // input in the form has changed\n        // });\n        // const updatedForm = updateObject(selectedPet, {\n        //     [inputId]: updatedFormElement,\n        // });\n\n        // let validForm = true;\n        // for (let inputId in updatedForm) {\n        //     validForm = updatedForm[inputId].valid && validForm;\n        // }\n        // setSelectedPet(updatedForm);\n        // setFormIsValid(validForm);\n    };\n\n    console.log('selectedPet', selectedPet);\n\n    const toggleEditForm = () => {\n        setEditForm(() => !editForm);\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log('update');\n        axios\n            .put(`/api/pets/${selectedPet._id}`, {\n                name: selectedPet.name,\n                specie: selectedPet.specie,\n                breed: selectedPet.breed,\n                age: selectedPet.age,\n                diagnosis: selectedPet.diagnosis,\n                treatment: selectedPet.treatment,\n            })\n            .then((response) => {\n                props.history.goBack();\n\n                fetchData();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const deletePet = async () => {\n        await axios\n            .delete(`/api/pets/${selectedPet._id}`)\n            .then(() => {\n                console.log(\n                    `${selectedPet.name} ${selectedPet.lastName} was successfully removed`\n                );\n                props.history.goBack();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    if (!selectedPet) return <Spinner />;\n    return (\n        <>\n            {editForm ? (\n                <EditPet\n                    toggleEditForm={toggleEditForm}\n                    handleChange={handleChange}\n                    handleSubmit={handleSubmit}\n                    selectedPet={selectedPet}\n                />\n            ) : (\n                <div className={style.Card}>\n                    <h3>{selectedPet.name}</h3>\n                    <div className={style.Infos}>\n                        <div style={{ width: '100%' }}>\n                            <p>Specie: {selectedPet.specie}</p>\n                            <p>Breed: {selectedPet.breed}</p>\n                            <p>Age: {selectedPet.age}</p>\n                            <hr />\n                            <p>Diagnosis: {selectedPet.diagnosis}</p>\n                            <p>Treatment: {selectedPet.treatment}</p>\n                        </div>\n                        <div style={{ width: '100%', height: '50%' }}>\n                            <p>Owner: </p>\n                            <p>&nbsp; Name: {selectedPet.owner.name}</p>\n                            <p>\n                                &nbsp; Last name: {selectedPet.owner.lastName}\n                            </p>\n                            <hr />\n                            <p>&nbsp; @: {selectedPet.owner.email}</p>\n                            <p>\n                                &nbsp;{' '}\n                                <img\n                                    src=\"../../../../images/phone-logo.png\"\n                                    alt=\"phone-logo\"\n                                    style={{\n                                        width: '1.2rem',\n                                        marginRight: '5%',\n                                    }}\n                                />\n                                {selectedPet.owner.phoneNumber}\n                            </p>\n                            <hr />\n                            <p>\n                                &nbsp; Street:{' '}\n                                {selectedPet.owner.address.street}\n                            </p>\n                            <p>&nbsp; City: {selectedPet.owner.address.city}</p>\n                            <p>\n                                &nbsp; ZIP code:{' '}\n                                {selectedPet.owner.address.zipCode}\n                            </p>\n                            <p>\n                                &nbsp; State: {selectedPet.owner.address.state}\n                            </p>\n                        </div>\n                    </div>\n                    <div className={style.buttons}>\n                        <div>\n                            <button onClick={() => props.history.goBack()}>\n                                Back\n                            </button>\n                        </div>\n                        <div style={{ display: 'flex', marginRight: '5%' }}>\n                            <button onClick={toggleEditForm}>Edit</button>\n                            <button onClick={deletePet}>Delete</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default PetDetails;\n","import './App.css';\nimport { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './Components/Home/Home';\nimport Signup from './Components/Auth/Signup/Signup';\nimport Navbar from './Components/Navbar/Navbar';\nimport Footer from './Components/Footer/Footer';\nimport UsersList from './Components/Users/UsersList/UsersList';\nimport UserDetails from './Components/Users/UserDetails/UserDetails';\nimport AddUser from './Components/Users/AddUser/AddUser';\nimport AddPet from './Components/Pets/AddPet/AddPet';\nimport PetsList from './Components/Pets/PetsList/PetsList';\nimport PetDetails from './Components/Pets/PetDetails/PetDetails';\n\nfunction App(props) {\n    const [user, setUser] = useState(props.user || '');\n\n    console.log('user', user);\n\n    let isEmployee = false;\n    {\n        user.role === 'employee' && (isEmployee = true);\n    }\n\n    return (\n        <div className=\"App\">\n            <Route\n                render={(props) => (\n                    <Navbar\n                        {...props}\n                        isEmployee={isEmployee}\n                        setUser={setUser}\n                        user={user}\n                    />\n                )}\n            />\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route\n                    exact\n                    path=\"/signup\"\n                    render={(props) => <Signup {...props} setUser={setUser} />}\n                />\n                <Route exact path=\"/users\" component={UsersList} />\n                <Route\n                    exact\n                    path=\"/users/add\"\n                    render={(props) => <AddUser {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/users/:id\"\n                    render={(props) => (\n                        <UserDetails\n                            {...props}\n                            isEmployee={isEmployee}\n                            selectedUser={user}\n                        />\n                    )}\n                />\n\n                <Route\n                    exact\n                    path=\"/pets/add\"\n                    render={(props) => (\n                        <AddPet\n                            {...props}\n                            isEmployee={isEmployee}\n                            user={user}\n                        />\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/users/:id/pet\"\n                    render={(props) => <AddPet {...props} />}\n                />\n                <Route exact path=\"/pets\" component={PetsList} />\n                <Route exact path=\"/pets/:id\" component={PetDetails} />\n            </Switch>\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport axios from 'axios';\n\naxios\n    .get('/api/auth/loggedin')\n    .then((response) => {\n        const user = response.data;\n        ReactDOM.render(\n            <BrowserRouter>\n                <App user={user} />\n            </BrowserRouter>,\n            document.getElementById('root')\n        );\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"EditUser_Form__lkfFK\",\"Input\":\"EditUser_Input__2LzE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"EditPet_Form__2oJl5\",\"Input\":\"EditPet_Input__1NSqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3cBI6\",\"Label\":\"Input_Label__1v3Uc\",\"InputElement\":\"Input_InputElement__3rTLZ\",\"Invalid\":\"Input_Invalid__3Dkzu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UserList_Container__3e04F\",\"resultCard\":\"UserList_resultCard__1z-Gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"UserDetails_Card__HQ1WF\",\"Infos\":\"UserDetails_Infos__3ej3a\",\"buttons\":\"UserDetails_buttons__1xvsu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PetsList_Container__2RD_v\",\"resultCard\":\"PetsList_resultCard__30Eix\",\"Button\":\"PetsList_Button__cvohk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"PetDetails_Card__RdALo\",\"Infos\":\"PetDetails_Infos__2ilSc\",\"buttons\":\"PetDetails_buttons__11ne8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Signup_Form__8QMrr\",\"Button\":\"Signup_Button__15QTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__2hRdE\",\"Button\":\"Navbar_Button__1zRXy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Login_Button__2pbIP\",\"Form\":\"Login_Form__OiCHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"AddUser_Form__3-O1P\",\"Button\":\"AddUser_Button__1q-zJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"AddPet_Form__3ykWl\",\"Button\":\"AddPet_Button__3ZfPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Carousel\":\"Carousel_Carousel__Ad4Ae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__IrRCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Filters_Container__2qZUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2C0iS\",\"load4\":\"Spinner_load4__2DS-6\"};"],"sourceRoot":""}